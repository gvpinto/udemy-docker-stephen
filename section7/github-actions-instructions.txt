name: Deploy Frontend
on:
  push:
    branches:
      - main # check your repo, your default branch might be master!
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

jobs:
    build:
        runs-on: ubuntu-latest
            steps:
                - uses: actions/checkout@v3
                - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
                - run: docker build -t piercingstripes/docker-react -f ./section6/frontend/Dockerfile.dev ./section6/frontend/
                - run: docker run -e CI=true piercingstripes/docker-react npm run test

                - name: Generate deployment package
                    run: zip -r deploy.zip . -x '*.git*'

                - name: Deploy to EB
                    uses: einaregilsson/beanstalk-deploy@v18
                    with:
                    aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
                    aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
                    application_name: docker-gh
                    environment_name: Dockergh-env
                    existing_bucket_name: elasticbeanstalk-us-east-1-923445559289
                    region: us-east-1
                    version_label: ${{ github.sha }}

name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."



* Remember to change your application_name, environment_name, existing_bucket_name, and region to the values used by your AWS EBS environment.
* Remember to check your default branch to see if it is main or master and update the branches field accordingly.

### DEPLOY Frontend
To replace Travis with Github Actions you can do the following:
1. Delete your .travis.yml file from the local project.
2. Navigate to your Github repository.
3. Click Settings
4. Click Secrets
5. Click Actions
6. Click New repository secret
7. Create key/value pair secrets for AWS_ACCESS_KEY, AWS_SECRET_KEY, DOCKER_USERNAME, DOCKER_PASSWORD.
Important - You do not need to create an environment or environment secrets. Doing so will cause a failure of the action without making additional changes to the workflow file.
All that is required is simply creating the repository secrets as shown below:
8. In your local development environment, create a .github directory at the root of your project
9. Create a workflows directory inside the new .github directory
10. In the workflows directory create a deploy.yaml file which should contain the following code (name does not matter):
* Remember to change your application_name, environment_name, existing_bucket_name, and region to the values used by your AWS EBS environment.
* Remember to check your default branch to see if it is main or master and update the branches field accordingly.
11. Run the typical git add, commit and push commands
12. Click Actions in the Github repository dashboard to view each step of the workflow.

Note - This code is using a well-supported marketplace action, more info can be found here:
https://github.com/einaregilsson/beanstalk-deploy

name: Deploy Frontend
on:
  push:
    branches:
      - main # check your repo, your default branch might be master!
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - run: docker build -t cygnetops/react-test -f Dockerfile.dev .
      - run: docker run -e CI=true cygnetops/react-test npm test
 
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
 
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: docker-gh
          environment_name: Dockergh-env
          existing_bucket_name: elasticbeanstalk-us-east-1-923445559289
          region: us-east-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip